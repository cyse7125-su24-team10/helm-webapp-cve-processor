pipeline {
    agent any
    stages {
        stage('Clone') {
            steps {
                git credentialsId: 'github-pat', branch: 'main', url: 'https://github.com/cyse7125-su24-team10/helm-webapp-cve-processor.git'
            }
        }
        stage('helm lint') {
            steps {
                script {
                    sh "helm lint ./cve-processor"
                }
            }
        }
        stage('helm chart version') {
            steps {
                script {
                    def newVersion = sh(
                        script: "npx semantic-release --branches main --repository-url https://github.com/cyse7125-su24-team10/helm-webapp-cve-processor.git --dryRun --parseOpts=false --noCi | grep 'Publishing version' | cut -d' ' -f3",
                        returnStdout: true
                    ).trim()
                    env.CHART_VERSION = newVersion
                    echo "New chart version: ${CHART_VERSION}"
                }
            }
        }
        stage('release') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'github-pat', usernameVariable: 'GITHUB_USERNAME', passwordVariable: 'GITHUB_TOKEN')]) {
                    script {
                        sh "npx semantic-release"
                    }
                }
            }
        }
    }
}